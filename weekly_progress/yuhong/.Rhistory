knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
install.packages("lubridate")
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
class(tpeTime)
typeof(tpeTime)
typeof(tpeTime)
class(tpeTime)
tpeTime
print(tpeTime)
cat(tpeTime)
#讓電腦說給我聽
tpeTime2 <- ymd_hms("2010-03-18 16:52:40",
tz="Asia/Taipei")
pgTime2 <- mdy_hms("Mar.01, 2020, 03:52:40",
tz="Europe/Lisbon")
#讓電腦說給我聽
# 1 先跟電腦說
tpeTime2 <- ymd_hms("2010-03-18 16:52:40",
tz="Asia/Taipei")
pgTime2 <- mdy_hms("Mar.01, 2020, 03:52:40",
tz="Europe/Lisbon")
#2 換地區時間到美國
tpeTime3 <-
with_tz(tpeTime2, tzone="America/New_York")
print(tpeTime2)
print(tpeTime3)
#讓電腦說給我聽
# 1 先跟電腦說
tpeTime2 <- ymd_hms("2010-03-18 16:52:40",
tz="Asia/Taipei")
pgTime2 <- mdy_hms("Mar.01, 2020, 03:52:40",
tz="Europe/Lisbon")
#2 換地區時間到美國，class 不動
tpeTime3 <-
with_tz(tpeTime2, tzone="America/New_York")
print(tpeTime2) #Taipei
print(tpeTime3) #America
#讓電腦說給我聽
# 1 先跟電腦說
tpeTime2 <- ymd_hms("2010-03-18 16:52:40",
tz="Asia/Taipei")
pgTime2 <- mdy_hms("Mar.01, 2020, 03:52:40",
tz="Europe/Lisbon")
#2 換地區時間到美國，class 不動
##台北換美
tpeTime3 <-
with_tz(tpeTime2, tzone="America/New_York")
print(tpeTime2) #Taipei
print(tpeTime3) #America EDT 美東
##葡萄牙換美
pgTime3 <-
with_tz(pgTime2, tzone="America/New_York")
print(pgTime2)
print(pgTime3)
## DT: daylight time 日光節約時間
## ST: standard time 標準（非日光節約時間）
# Pass data as it is (Not good), not a character
tpeTime
# Method 1: convert to UTC and pass as character
tpeTime_utc <- with_tz(tpeTime, tzone="UTC")
as.character(tpeTime_utc)
# Method 2: pass as a character that fits ISO8601 date time description standard with tz onset specified
tpeTime_iso8601 <- format_ISO8601(tpeTime, usetz=T)
tpeTime_iso8601
# Pass data as it is (Not good), not a character
tpeTime
# Method 1: convert to UTC and pass as character
tpeTime_utc <- with_tz(tpeTime, tzone="UTC")
as.character(tpeTime_utc)
# Method 2: pass as a character that fits ISO8601 date time description standard with tz onset specified
tpeTime_iso8601 <- format_ISO8601(tpeTime, usetz=T)
tpeTime_iso8601
# 別人拿到
tpeTime <- ymd_hms(tpeTime_iso8601)
# 別人拿到
tpeTime <- ymd_hms(tpeTime_iso8601)
# Pass data as it is (Not good), not a character
tpeTime
# Method 1: convert to UTC and pass as character
tpeTime_utc <- with_tz(tpeTime, tzone="UTC")
as.character(tpeTime_utc)
# Method 2: pass as a character that fits ISO8601 date time description standard with tz onset specified
tpeTime_iso8601 <- format_ISO8601(tpeTime, usetz=T)
tpeTime_iso8601
# 別人拿到
tpeTime <- ymd_hms(tpeTime_iso8601)
tpeTime
setwd("~/GitHub/109-2-app101/weekly_progress/yuhong")
knitr::opts_chunk$set(echo = TRUE)
library(googlesheets4)
install.packages("googlesheets4")
install.packages("tidyverse")
library(lubridate)
# Date/Time class
purchasingTime <-
ymd_hms("2020-03-31T13:40:55Z")
# character
location <- "一芳"
item <- "水果茶"
# numeric
quantity <- 2
mingsPurchase <-
list(
purchasingTime,
location,
quantity,
item
)
print(mingsPurchase)
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
# Date/Time class
purchasingTime <-
ymd_hms("2020-03-31T13:40:55Z")
# character
location <- "一芳"
item <- "水果茶"
# numeric
quantity <- 2
mingsPurchase <-
list(
purchasingTime,
location,
quantity,
item
)
print(mingsPurchase)
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
mingsPurchase2 <-
list(
time = purchasingTime,
'location' = location,
"quantity" = quantity,
`item name` = item
)
print(mingsPurchase2)
# list 中每個元素值也可以是vector形式（atomic vector 或 non-atomic vector, 如list, 均可以）
explist <-
list(
c(2,30,58),
list("Lulu",23,"girl),
true
)
# list 中每個元素值也可以是vector形式（atomic vector 或 non-atomic vector, 如list, 均可以）
explist <-
list(
c(2,30,58),
list("Lulu",23,"girl"),
true
)
# list 中每個元素值也可以是vector形式（atomic vector 或 non-atomic vector, 如list, 均可以）
explist <-
list(
c(2,30,58),
list("Lulu",23,"girl"),
TRUE
)
explist
# list 中每個元素值也可以是vector形式（atomic vector 或 non-atomic vector, 如list, 均可以）
explist <-
list(
c(2,30,58),
list("Lulu",23,"girl"),
TRUE
)
explist
# c 堆疊則自動合併
expc <-
c(
c(2,3),
c(8,9)
)
# list 中每個元素值也可以是vector形式（atomic vector 或 non-atomic vector, 如list, 均可以）
explist <-
list(
c(2,30,58),
list("Lulu",23,"girl"),
TRUE
)
explist
# c 堆疊則自動合併
expc <-
c(
c(2,3),
c(8,9)
)
expc
# list 豐富結構
## 「**2杯**」「**水果茶**」
item1 <- list(
quantity=2,
`item name`="水果茶"
)
## 「**1杯**」「**日月紅茶**」
item2 <- list(
quantity=1,
`item name`="日月紅茶"
)
mingsPurchase3 <-
list(
time = purchasingTime,
location = location,
items=list(
item1,
item2
)
)
print(mingsPurchase3)
#實際運用
student1 <-
list(
name = character(), #到時候該放 character
id = character(),
gmail = character(),
googleClassroom =
list(
displayName = character()
),
github =
list(
username = character(),
repoUrl = character()
),
homeworks = list(), #到時候該放 list
exams = list(),
list()
)
names(student1) # 每個元素名稱
length(student1) # 元素個數
str(student1, 1) # 第一層基本元素架構
str(student1, 1) # 第一層基本元素架構
str(student1, 2)
str(student1, 1) # 第一層基本元素架構
-
str(student1, 2) # 即到第二層
str(student1, 1) # 第一層基本元素架構
"-"
str(student1, 2) # 即到第二層
str(student1, 1) # 第一層基本元素架構
\n
str(student1, 1) # 第一層基本元素架構
\\n
str(student1, 1) # 第一層基本元素架構
"\n"
str(student1, 2) # 即到第二層
str(student1, 1) # 第一層基本元素架構
str(student1, 2) # 即到第二層
str(student1, 1) # 第一層基本元素架構
str(student1, 2) # 即到第二層
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
install.packages("date")
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
#丟一筆資料
install.packages('lubridate')
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
install.packages("lubridate")
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
str(student1, 2)
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
install.packages("lubridate")
#丟一筆資料
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
#丟一筆資料
library(lubridate)
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
exam1 <- list(
date=ymd("2020-10-28"),
grade=50
)
student1 <-
list(
name = "Martin",
id = "007",
gmail = "mt@gm.ntpu.edu.tw",
googleClassroom =
list(
displayName = "MT L"
),
github =
list(
username = "tpemartin",
repoUrl = "https://github.com/tpemartin/109-1-inclass-practice"
),
homeworks = list(
hw1
),
exams = list(
exam1
),
list()
)
str(student1, 2)
#丟一筆資料
library(lubridate)
hw1 <- list(
date=ymd("2020-10-21"),
grade=10
)
exam1 <- list(
date=ymd("2020-10-28"),
grade=50
)
student1 <-
list(
name = "Martin",
id = "007",
gmail = "mt@gm.ntpu.edu.tw",
googleClassroom =
list(
displayName = "MT L"
),
github =
list(
username = "tpemartin",
repoUrl = "https://github.com/tpemartin/109-1-inclass-practice"
),
homeworks = list(
hw1
),
exams = list(
exam1
),
list()
)
str(student1, 2)
#實際運用 Case2
categoryTemplate =
list(
categoryName=character(),
items = list(
)
)
saladCat <-
list(
categoryName = "沙拉套餐",
items = list(
list(
"板煎雞腿排經典凱薩沙拉",
246.5),
list(
"炙燒鴨胸佐胡麻沙拉",
246.5),
list(
"煙燻鮭魚佐酒醋沙拉",
246.5)
)
)
print(saladCat)
# 轉Json
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(mingsPurchase3)
install.packages("jsonlite")
knitr::opts_chunk$set(echo = TRUE)
# 轉Json
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(mingsPurchase3)
# 轉Json
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(mingsPurchase3)
#物件儲存，直接在 global environment 出現不重跑
save(mingsPurchase3,saladCat, file="myData.Rda")
#物件儲存，直接在 global environment 出現不重跑
save(mingsPurchase3,saladCat, file="0327-list-Data.Rda")
